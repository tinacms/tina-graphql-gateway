type Query {
  document(path: String!): DocumentUnion
}

union DocumentUnion = BlockPage | Post | Author | Menu

type BlockPage {
  form: BlockPageFieldConfig
  absolutePath: String!
  path: String!
  content: String!
  excerpt: String
  data: BlockPageData!
}

type BlockPageFieldConfig {
  label: String
  key: String
  fields: [BlockPageFieldConfig_component_config]
}

union BlockPageFieldConfig_component_config = TextFormField | BlocksFieldConfig

type TextFormField {
  name: String
  label: String
  description: String
  component: String
}

type BlocksFieldConfig {
  name: String
  label: String
  description: String
  component: String
  templates: BlocksTemplates
}

type BlocksTemplates {
  SidecarFieldConfig: SidecarFieldConfig
  ExcerptPostFieldConfig: ExcerptPostFieldConfig
  PostListFieldConfig: PostListFieldConfig
  PriceListFieldConfig: PriceListFieldConfig
  AuthorListFieldConfig: AuthorListFieldConfig
  SponsorListFieldConfig: SponsorListFieldConfig
  PageReferenceFieldConfig: PageReferenceFieldConfig
  SectionIndexFieldConfig: SectionIndexFieldConfig
}

type SidecarFieldConfig {
  label: String
  key: String
  fields: [SidecarFieldConfig_component_config]
}

union SidecarFieldConfig_component_config = TextFormField | ImageFormField | CtaFieldsListSidecarConfig | ActionsFieldConfig | SelectFormField

type ImageFormField {
  name: String
  label: String
  description: String
  component: String
}

type CtaFieldsListSidecarConfig {
  label: String
  key: String
  name: String
  component: String
  fields: [CtaFieldsListSidecarConfigFields]
}

union CtaFieldsListSidecarConfigFields = TextFormField

type ActionsFieldConfig {
  name: String
  label: String
  description: String
  component: String
  templates: ActionsTemplates
}

type ActionsTemplates {
  ActionVideoFieldConfig: ActionVideoFieldConfig
  ActionNewsletterFieldConfig: ActionNewsletterFieldConfig
  ActionPageReferenceFieldConfig: ActionPageReferenceFieldConfig
}

type ActionVideoFieldConfig {
  label: String
  key: String
  fields: [ActionVideoFieldConfig_component_config]
}

union ActionVideoFieldConfig_component_config = TextFormField

type ActionNewsletterFieldConfig {
  label: String
  key: String
  fields: [ActionNewsletterFieldConfig_component_config]
}

union ActionNewsletterFieldConfig_component_config = TextFormField

type ActionPageReferenceFieldConfig {
  label: String
  key: String
  fields: [ActionPageReferenceFieldConfig_component_config]
}

union ActionPageReferenceFieldConfig_component_config = SelectFormField | ButtonSettingsFieldsListActionPageReferenceConfig

type SelectFormField {
  name: String
  label: String
  description: String
  component: String
  options: [String]
}

type ButtonSettingsFieldsListActionPageReferenceConfig {
  label: String
  key: String
  name: String
  component: String
  fields: [ButtonSettingsFieldsListActionPageReferenceConfigFields]
}

union ButtonSettingsFieldsListActionPageReferenceConfigFields = TextFormField

type ExcerptPostFieldConfig {
  label: String
  key: String
  fields: [ExcerptPostFieldConfig_component_config]
}

union ExcerptPostFieldConfig_component_config = SelectFormField | TextFormField

type PostListFieldConfig {
  label: String
  key: String
  fields: [PostListFieldConfig_component_config]
}

union PostListFieldConfig_component_config = PostsFieldsListPostListConfig

type PostsFieldsListPostListConfig {
  label: String
  key: String
  name: String
  component: String
  fields: [PostsFieldsListPostListConfigFields]
}

union PostsFieldsListPostListConfigFields = SelectFormField

type PriceListFieldConfig {
  label: String
  key: String
  fields: [PriceListFieldConfig_component_config]
}

union PriceListFieldConfig_component_config = TextFormField | PricesFieldsListPriceListConfig

type PricesFieldsListPriceListConfig {
  label: String
  key: String
  name: String
  component: String
  fields: [PricesFieldsListPriceListConfigFields]
}

union PricesFieldsListPriceListConfigFields = TextFormField | BulletPointsListPriceListPricesConfig | SelectFormField

type BulletPointsListPriceListPricesConfig {
  name: String
  label: String
  description: String
  component: String
  itemField: BulletPointsListPriceListPricesConfigItem
}

type BulletPointsListPriceListPricesConfigItem {
  name: String
  label: String
  component: String
}

type AuthorListFieldConfig {
  label: String
  key: String
  fields: [AuthorListFieldConfig_component_config]
}

union AuthorListFieldConfig_component_config = AuthorsListAuthorListConfig

type AuthorsListAuthorListConfig {
  name: String
  label: String
  description: String
  component: String
  itemField: AuthorsListAuthorListConfigItem
}

type AuthorsListAuthorListConfigItem {
  name: String
  label: String
  component: String
  options: [String]
}

type SponsorListFieldConfig {
  label: String
  key: String
  fields: [SponsorListFieldConfig_component_config]
}

union SponsorListFieldConfig_component_config = TextFormField | SponsorFieldsListSponsorListConfig

type SponsorFieldsListSponsorListConfig {
  label: String
  key: String
  name: String
  component: String
  fields: [SponsorFieldsListSponsorListConfigFields]
}

union SponsorFieldsListSponsorListConfigFields = TextFormField | ImageFormField

type PageReferenceFieldConfig {
  label: String
  key: String
  fields: [PageReferenceFieldConfig_component_config]
}

union PageReferenceFieldConfig_component_config = TextFormField | SelectFormField

type SectionIndexFieldConfig {
  label: String
  key: String
  fields: [SectionIndexFieldConfig_component_config]
}

union SectionIndexFieldConfig_component_config = TextFormField | SelectFormField

type BlockPageData {
  _template: String
  title: String
  blocks: [BlocksUnion]
}

union BlocksUnion = SidecarData | ExcerptPostData | PostListData | PriceListData | AuthorListData | SponsorListData | PageReferenceData | SectionIndexData

type SidecarData {
  _template: String
  text: String
  image: ImageGallerySidecar
  cta: CtaFieldsSidecar
  actions: [ActionsUnion]
  style: String
}

type ImageGallerySidecar {
  path: String!
  absolutePath: String!
}

type CtaFieldsSidecar {
  header: String
}

union ActionsUnion = ActionVideoData | ActionNewsletterData | ActionPageReferenceData

type ActionVideoData {
  _template: String
  url: String
}

type ActionNewsletterData {
  _template: String
  body: String
  footer: String
}

type ActionPageReferenceData {
  _template: String
  page: PageSelectActionPageReference
  button_settings: ButtonSettingsFieldsActionPageReference
}

union PageSelectActionPageReference = BlockPage

type ButtonSettingsFieldsActionPageReference {
  label: String
}

type ExcerptPostData {
  _template: String
  post: PostSelectExcerptPost
  description: String
  style: String
}

union PostSelectExcerptPost = Post

type Post {
  form: PostFieldConfig
  absolutePath: String!
  path: String!
  content: String!
  excerpt: String
  data: PostData!
}

type PostFieldConfig {
  label: String
  key: String
  fields: [PostFieldConfig_component_config]
}

union PostFieldConfig_component_config = TextFormField | SelectFormField | ImageFormField | TagsFormField

type TagsFormField {
  name: String
  label: String
  description: String
  component: String
}

type PostData {
  _template: String
  title: String
  author: AuthorSelectPost
  image: ImageGalleryPost
  hashtags: [String]
}

union AuthorSelectPost = Author

type Author {
  form: AuthorFieldConfig
  absolutePath: String!
  path: String!
  content: String!
  excerpt: String
  data: AuthorData!
}

type AuthorFieldConfig {
  label: String
  key: String
  fields: [AuthorFieldConfig_component_config]
}

union AuthorFieldConfig_component_config = TextFormField | ImageFormField | AnecdotesListAuthorConfig | AccoladesFieldsListAuthorConfig

type AnecdotesListAuthorConfig {
  name: String
  label: String
  description: String
  component: String
  itemField: AnecdotesListAuthorConfigItem
}

type AnecdotesListAuthorConfigItem {
  name: String
  label: String
  component: String
}

type AccoladesFieldsListAuthorConfig {
  label: String
  key: String
  name: String
  component: String
  fields: [AccoladesFieldsListAuthorConfigFields]
}

union AccoladesFieldsListAuthorConfigFields = TextFormField

type AuthorData {
  _template: String
  name: String!
  image: ImageGalleryAuthor
  gallery: [GalleryGalleryAuthor]
  anecdotes: [String]
  accolades: [AccoladesFieldsListAuthor]
}

type ImageGalleryAuthor {
  path: String!
  absolutePath: String!
}

type GalleryGalleryAuthor {
  path: String!
  absolutePath: String!
}

type AccoladesFieldsListAuthor {
  figure: String
  description: String
}

type ImageGalleryPost {
  path: String!
  absolutePath: String!
}

type PostListData {
  _template: String
  posts: [PostsFieldsListPostList]
}

type PostsFieldsListPostList {
  post: PostSelectPostListPosts
}

union PostSelectPostListPosts = Post

type PriceListData {
  _template: String
  heading: String!
  prices: [PricesFieldsListPriceList]
}

type PricesFieldsListPriceList {
  title: String!
  description: String!
  bullet_points: [String]
  category: String
}

type AuthorListData {
  _template: String
  authors: [AuthorsListAuthorList]
}

union AuthorsListAuthorList = Author

type SponsorListData {
  _template: String
  description: String
  sponsor: [SponsorFieldsListSponsorList]
}

type SponsorFieldsListSponsorList {
  name: String
  url: String
  image: ImageGallerySponsorListSponsor
}

type ImageGallerySponsorListSponsor {
  path: String!
  absolutePath: String!
}

type PageReferenceData {
  _template: String
  description: String
  page: PageSelectPageReference
}

union PageSelectPageReference = BlockPage

type SectionIndexData {
  _template: String
  body: String
  limit: Int
  section: String
}

type Menu {
  form: MenuFieldConfig
  absolutePath: String!
  path: String!
  content: String!
  excerpt: String
  data: MenuData!
}

type MenuFieldConfig {
  label: String
  key: String
  fields: [MenuFieldConfig_component_config]
}

union MenuFieldConfig_component_config = ImageFormField | MenuItemFieldsListMenuConfig

type MenuItemFieldsListMenuConfig {
  label: String
  key: String
  name: String
  component: String
  fields: [MenuItemFieldsListMenuConfigFields]
}

union MenuItemFieldsListMenuConfigFields = TextFormField | SelectFormField

type MenuData {
  _template: String
  logo: LogoGalleryMenu
  menu_item: [MenuItemFieldsListMenu]
}

type LogoGalleryMenu {
  path: String!
  absolutePath: String!
}

type MenuItemFieldsListMenu {
  label: String
  page: PageSelectMenuMenuItem
}

union PageSelectMenuMenuItem = BlockPage

type Mutation {
  document(path: String!, params: DocumentInput): DocumentUnion
}

input DocumentInput {
  BlockPageInput: BlockPageInput
  PostInput: PostInput
  AuthorInput: AuthorInput
  MenuInput: MenuInput
}

input BlockPageInput {
  data: BlockPageDataInput
  content: String
}

input BlockPageDataInput {
  title: String
  blocks: [BlocksInput]
}

input BlocksInput {
  SidecarInput: SidecarDataInput
  ExcerptPostInput: ExcerptPostDataInput
  PostListInput: PostListDataInput
  PriceListInput: PriceListDataInput
  AuthorListInput: AuthorListDataInput
  SponsorListInput: SponsorListDataInput
  PageReferenceInput: PageReferenceDataInput
  SectionIndexInput: SectionIndexDataInput
}

input SidecarDataInput {
  text: String
  image: String
  cta: CtaFieldsSidecarInput
  actions: [ActionsInput]
  style: StyleSelectSidecar
}

input CtaFieldsSidecarInput {
  header: String
}

input ActionsInput {
  ActionVideoInput: ActionVideoDataInput
  ActionNewsletterInput: ActionNewsletterDataInput
  ActionPageReferenceInput: ActionPageReferenceDataInput
}

input ActionVideoDataInput {
  url: String
}

input ActionNewsletterDataInput {
  body: String
  footer: String
}

input ActionPageReferenceDataInput {
  page: String
  button_settings: ButtonSettingsFieldsActionPageReferenceInput
}

input ButtonSettingsFieldsActionPageReferenceInput {
  label: String
}

enum StyleSelectSidecar {
  Sidecar
  Column
  Slant
}

input ExcerptPostDataInput {
  post: String
  description: String
  style: StyleSelectExcerptPost
}

enum StyleSelectExcerptPost {
  Simple
  Full
}

input PostListDataInput {
  posts: [PostsFieldsListPostListInput]
}

input PostsFieldsListPostListInput {
  post: String
}

input PriceListDataInput {
  heading: String
  prices: [PricesFieldsListPriceListInput]
}

input PricesFieldsListPriceListInput {
  title: String
  description: String
  bullet_points: [String]
  category: CategorySelectPriceListPrices
}

enum CategorySelectPriceListPrices {
  Basic
  Free
  Pro
}

input AuthorListDataInput {
  authors: [String]
}

input SponsorListDataInput {
  description: String
  sponsor: [SponsorFieldsListSponsorListInput]
}

input SponsorFieldsListSponsorListInput {
  name: String
  url: String
  image: String
}

input PageReferenceDataInput {
  description: String
  page: String
}

input SectionIndexDataInput {
  body: String
  limit: Int
  section: SectionSelectSectionIndex
}

enum SectionSelectSectionIndex {
  posts
  pages
  authors
}

input PostInput {
  data: PostDataInput
  content: String
}

input PostDataInput {
  title: String
  author: String
  image: String
  hashtags: [String]
}

input AuthorInput {
  data: AuthorDataInput
  content: String
}

input AuthorDataInput {
  name: String
  image: String
  gallery: [String]
  anecdotes: [String]
  accolades: [AccoladesFieldsListAuthorInput]
}

input AccoladesFieldsListAuthorInput {
  figure: String
  description: String
}

input MenuInput {
  data: MenuDataInput
  content: String
}

input MenuDataInput {
  logo: String
  menu_item: [MenuItemFieldsListMenuInput]
}

input MenuItemFieldsListMenuInput {
  label: String
  page: String
}
