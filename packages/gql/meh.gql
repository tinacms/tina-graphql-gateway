interface Node {
  ID: ID!
}

scalar JSON

scalar JSONObject

type SystemInfo {
  filename: String!
  basename: String!
}

type Query {
  node(id: ID!): Node
}

union PagesData = BlockPageData

union PagesValues = BlockPageValues

union PagesForm = BlockPageForm

type PagesDocument implements Node {
  id: ID!
  sys: SystemInfo!
  data: PagesData!
  values: PagesValues!
  form: PagesForm!
}

union PostsData = PostData

union PostsValues = PostValues

union PostsForm = PostForm

type PostsDocument implements Node {
  id: ID!
  sys: SystemInfo!
  data: PostsData!
  values: PostsValues!
  form: PostsForm!
}

union AuthorsData = AuthorData

union AuthorsValues = AuthorValues

union AuthorsForm = AuthorForm

type AuthorsDocument implements Node {
  id: ID!
  sys: SystemInfo!
  data: AuthorsData!
  values: AuthorsValues!
  form: AuthorsForm!
}

union MenusData = MenuData

union MenusValues = MenuValues

union MenusForm = MenuForm

type MenusDocument implements Node {
  id: ID!
  sys: SystemInfo!
  data: MenusData!
  values: MenusValues!
  form: MenusForm!
}

type LongTextValue {
  raw: String
  markdownAst: JSONObject
  html: String
}

type ActionNewsletterData {
  body: LongTextValue
  footer: LongTextValue
}

type ActionNewsletterValues {
  body: String
  footer: String
}

type TextareaField {
  name: String
  label: String
  component: String
}

type ActionNewsletterForm {
  body: TextareaField
  footer: TextareaField
}

type ActionPageReferenceData {
  page: PagesDocument
  button_settings: String
}

type ActionPageReferenceValues {
  page: String
  button_settings: String
}

type SelectField {
  name: String
  label: String
  component: String
  options: [String]
  refetchPolicy: String
}

type TextField {
  name: String
  label: String
  component: String
}

type ActionPageReferenceForm {
  page: SelectField
  button_settings: TextField
}

type ActionVideoData {
  url: String
}

type ActionVideoValues {
  url: String
}

type ActionVideoForm {
  url: TextField
}

type AuthorListData {
  authors: String
}

type AuthorListValues {
  authors: String
}

type AuthorListForm {
  authors: TextField
}

type AuthorData {
  name: String
  image: String
  gallery: String
  anecdotes: String
  accolades: String
}

type AuthorValues {
  name: String
  image: String
  gallery: String
  anecdotes: String
  accolades: String
}

type AuthorForm {
  name: TextField
  image: TextField
  gallery: TextField
  anecdotes: TextField
  accolades: TextField
}

type BlockPageData {
  title: String
  date: String
  blocks: String
}

type BlockPageValues {
  title: String
  date: String
  blocks: String
}

type BlockPageForm {
  title: TextField
  date: TextField
  blocks: TextField
}

type ExcerptPostData {
  post: PostsDocument
  description: LongTextValue
  style: String
}

type ExcerptPostValues {
  post: String
  description: String
  style: String
}

type ExcerptPostForm {
  post: SelectField
  description: TextareaField
  style: SelectField
}

type MenuData {
  logo: String
  menu_item: String
}

type MenuValues {
  logo: String
  menu_item: String
}

type MenuForm {
  logo: TextField
  menu_item: TextField
}

type PageReferenceData {
  description: LongTextValue
  page: PagesDocument
}

type PageReferenceValues {
  description: String
  page: String
}

type PageReferenceForm {
  description: TextareaField
  page: SelectField
}

type PostListData {
  posts: String
}

type PostListValues {
  posts: String
}

type PostListForm {
  posts: TextField
}

type PostData {
  title: String
  author: AuthorsDocument
  image: String
  hashtags: String
}

type PostValues {
  title: String
  author: String
  image: String
  hashtags: String
}

type PostForm {
  title: TextField
  author: SelectField
  image: TextField
  hashtags: TextField
}

type PriceListData {
  heading: LongTextValue
  prices: String
}

type PriceListValues {
  heading: String
  prices: String
}

type PriceListForm {
  heading: TextareaField
  prices: TextField
}

type SectionIndexData {
  body: LongTextValue
  limit: String
  section: String
}

type SectionIndexValues {
  body: String
  limit: String
  section: String
}

type SectionIndexForm {
  body: TextareaField
  limit: TextField
  section: SelectField
}

type SidecarData {
  text: LongTextValue
  image: String
  cta: String
  actions: String
  style: String
}

type SidecarValues {
  text: String
  image: String
  cta: String
  actions: String
  style: String
}

type SidecarForm {
  text: TextareaField
  image: TextField
  cta: TextField
  actions: TextField
  style: SelectField
}

type SponsorListData {
  description: LongTextValue
  sponsor: String
}

type SponsorListValues {
  description: String
  sponsor: String
}

type SponsorListForm {
  description: TextareaField
  sponsor: TextField
}
