interface Node {
  id: ID!
}

interface Document {
  sys: SystemInfo
  id: ID!
}

interface FormField {
  label: String
  name: String
  component: String
}

"References another document, used as a foreign key"
scalar Reference

""
scalar JSON

""
scalar JSONObject

type SystemInfo {
  filename: String
  basename: String
  breadcrumbs(excludeExtension: Boolean): [String]
  path: String
  relativePath: String
  extension: String
  section: Section
}

type Section {
  type: String
  path: String
  label: String
  create: String
  match: String
  new_doc_ext: String
  templates: [String]
  slug: String
  documents: [Document]
}

type Mutation {
  addPendingDocument(relativePath: String, section: String, template: String): Node
  updatePostsDocument(relativePath: String, params: Posts_Input): Posts_Document
  updateAuthorsDocument(relativePath: String, params: Authors_Input): Authors_Document
}

type Query {
  node(id: ID!): Node
  getSections: [Section]
  getSection(section: String): Section
  getPostsDocument(relativePath: String): Posts_Document
  getPostsList: [Posts_Document]
  getAuthorsDocument(relativePath: String): Authors_Document
  getAuthorsList: [Authors_Document]
}

union Posts_Data = Post_Doc_Data | Section_Doc_Data

input Posts_Input {
  post: Post_Doc_Input
  section: Section_Doc_Input
}

union Posts_Values = Post_Doc_Values | Section_Doc_Values

union Posts_Form = Post_Doc_Form | Section_Doc_Form

type Posts_Document implements Node & Document {
  id: ID!
  sys: SystemInfo
  data: Posts_Data
  values: Posts_Values
  form: Posts_Form
}

type LongTextValue {
  raw: String
  markdownAst: JSONObject
  html: String
}

type Section_Cta_Data {
  header: LongTextValue
}

type Section_Data {
  description: LongTextValue
  cta: Section_Cta_Data
  authors: [Authors_Document]
}

union Post_Sections_Data = Section_Data

type Post_Doc_Data {
  title: LongTextValue
  author: Authors_Document
  sections: [Post_Sections_Data]
  _body: LongTextValue
}

type Section_Cta_Values {
  header: String
}

type Section_Values {
  description: String
  cta: Section_Cta_Values
  authors: [String]
  _template: String
}

union Post_Sections_Values = Section_Values

type Post_Doc_Values {
  title: String
  author: Reference
  sections: [Post_Sections_Values]
  _body: String
  _template: String
}

type TextareaField implements FormField {
  name: String
  label: String
  component: String
}

type SelectField implements FormField {
  name: String
  label: String
  component: String
  options: [String]
  refetchPolicy: String
}

union Section_Cta_FormFieldsUnion = TextareaField

type Section_Cta_GroupField implements FormField {
  name: String
  label: String
  component: String
  fields: [Section_Cta_FormFieldsUnion]
}

type TextField implements FormField {
  name: String
  label: String
  component: String
}

union List_FormFieldsUnion = TextField | SelectField

type ListField implements FormField {
  name: String
  label: String
  component: String
  defaultItem: String
  field: List_FormFieldsUnion
}

union Section_FormFieldsUnion = TextareaField | Section_Cta_GroupField | ListField

type Section_Form {
  label: String
  name: String
  fields: [Section_FormFieldsUnion]
}

type Post_Sections_BlocksFieldTemplates {
  section: Section_Form
}

type Post_Sections_BlocksField implements FormField {
  name: String
  label: String
  component: String
  templates: Post_Sections_BlocksFieldTemplates
}

union Post_Doc_FormFieldsUnion = TextareaField | SelectField | Post_Sections_BlocksField

type Post_Doc_Form {
  label: String
  name: String
  fields: [Post_Doc_FormFieldsUnion]
}

input Section_Cta_Input {
  header: String
}

input Section_Input {
  description: String
  cta: Section_Cta_Input
  authors: [String]
}

input Sections_Input {
  section: Section_Input
}

input Post_Doc_Input {
  title: String
  author: String
  sections: [Sections_Input]
  _body: String
}

type Section_Doc_Data {
  description: LongTextValue
  cta: Section_Cta_Data
  authors: [Authors_Document]
  _body: LongTextValue
}

type Section_Doc_Values {
  description: String
  cta: Section_Cta_Values
  authors: [String]
  _body: String
  _template: String
}

union Section_Doc_FormFieldsUnion = TextareaField | Section_Cta_GroupField | ListField

type Section_Doc_Form {
  label: String
  name: String
  fields: [Section_Doc_FormFieldsUnion]
}

input Section_Doc_Input {
  description: String
  cta: Section_Cta_Input
  authors: [String]
  _body: String
}

union Authors_Data = Author_Doc_Data

input Authors_Input {
  author: Author_Doc_Input
}

union Authors_Values = Author_Doc_Values

union Authors_Form = Author_Doc_Form

type Authors_Document implements Node & Document {
  id: ID!
  sys: SystemInfo
  data: Authors_Data
  values: Authors_Values
  form: Authors_Form
}

type Author_Accolades_Data {
  figure: LongTextValue
  description: LongTextValue
}

type Author_Doc_Data {
  name: LongTextValue
  role: String
  anecdotes: [String]
  favorite_posts: [Authors_Document]
  all_time_post: Posts_Document
  accolades: [Author_Accolades_Data]
  _body: LongTextValue
}

type Author_Accolades_Values {
  figure: String
  description: String
}

type Author_Doc_Values {
  name: String
  role: Reference
  anecdotes: [String]
  favorite_posts: [String]
  all_time_post: Reference
  accolades: [Author_Accolades_Values]
  _body: String
  _template: String
}

union Author_Accolades_FormFieldsUnion = TextareaField

type Author_Accolades_GroupListField implements FormField {
  name: String
  label: String
  component: String
  fields: [Author_Accolades_FormFieldsUnion]
}

union Author_Doc_FormFieldsUnion = TextareaField | SelectField | ListField | Author_Accolades_GroupListField

type Author_Doc_Form {
  label: String
  name: String
  fields: [Author_Doc_FormFieldsUnion]
}

input Author_Accolades_Input {
  figure: String
  description: String
}

input Author_Doc_Input {
  name: String
  role: String
  anecdotes: [String]
  favorite_posts: [String]
  all_time_post: String
  accolades: [Author_Accolades_Input]
  _body: String
}
