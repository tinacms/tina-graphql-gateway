type Query {
  document(path: String): DocumentUnion
}

union DocumentUnion = Post | Author

type Post {
  path: String
  form: Post_Form
  data: Post_Data
  initialValues: Post_InitialValues
}

type Post_Form {
  label: String
  name: String
  fields: [Post_FormFields]
}

union Post_FormFields = TextareaField | SelectField

type TextareaField {
  name: String
  label: String
  component: String
  description: String
}

type SelectField {
  name: String
  label: String
  component: String
  options: [String]
}

type Post_Data {
  title: String
  author: Post_Author_Document
}

type Post_Author_Document {
  document: Authors_DocumentUnion
}

union Authors_DocumentUnion = Author

type Author {
  path: String
  form: Author_Form
  data: Author_Data
  initialValues: Author_InitialValues
}

type Author_Form {
  label: String
  name: String
  fields: [Author_FormFields]
}

union Author_FormFields = TextareaField | Author_Accolades_GroupListField

type Author_Accolades_GroupListField {
  name: String
  label: String
  component: String
  fields: [Author_Accolades_FormFields]
}

union Author_Accolades_FormFields = TextareaField

type Author_Data {
  name: String
  accolades: [Author_Accolades_Data]
}

type Author_Accolades_Data {
  figure: String
  description: String
}

type Author_InitialValues {
  name: String
  accolades: [Author_Accolades_Data]
}

type Post_InitialValues {
  title: String
  author: String
}

type Mutation {
  updateDocument(path: String!, params: DocumentInput): DocumentUnion
}

input DocumentInput {
  Post_Input: Post_Input
  Author_Input: Author_Input
}

input Post_Input {
  content: String
  data: Post_InputData
}

input Post_InputData {
  title: String
  author: String
}

input Author_Input {
  content: String
  data: Author_InputData
}

input Author_InputData {
  name: String
  accolades: [Author_Accolades_InputData]
}

input Author_Accolades_InputData {
  figure: String
  description: String
}
