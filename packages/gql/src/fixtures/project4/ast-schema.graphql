type Query {
  document(path: String): DocumentUnion
}

input Post_InputData {
  title: String
  author: String
}

input Post_Input {
  data: Post_InputData
  content: String
}

input Author_Accolades_InputData {
  figure: String
  description: String
}

input Author_InputData {
  name: String
  favorite_posts: String
  accolades: [Author_Accolades_InputData]
}

input Author_Input {
  data: Author_InputData
  content: String
}

input DocumentInput {
  Post_Input: Post_Input
  Author_Input: Author_Input
}

type TextareaField {
  name: String
  label: String
  component: String
}

type SelectField {
  name: String
  label: String
  component: String
  options: [String]
}

union Post_FormFields = TextareaField | SelectField

type Post_Form {
  label: String
  name: String
  fields: [Post_FormFields]
}

union Authors_DocumentUnion = Author

type Post_Data {
  title: String
  author: Authors_DocumentUnion
}

type Post_InitialValues {
  title: String
  author: String
}

type Post {
  path: String
  form: Post_Form
  data: Post_Data
  initialValues: Post_InitialValues
}

union Author_Accolades_FormFields = TextareaField

type Author_Accolades_GroupListField {
  name: String
  label: String
  component: String
  fields: [Author_Accolades_FormFields]
}

union Author_FormFields = TextareaField | SelectField | Author_Accolades_GroupListField

type Author_Form {
  label: String
  name: String
  fields: [Author_FormFields]
}

union Posts_DocumentUnion = Post

type Author_Accolades_Data {
  figure: String
  description: String
}

type Author_Data {
  name: String
  favorite_posts: Posts_DocumentUnion
  accolades: [Author_Accolades_Data]
}

type Author_Accolades_InitialValues {
  _template: String
  figure: String
  description: String
}

type Author_InitialValues {
  name: String
  favorite_posts: String
  accolades: [Author_Accolades_InitialValues]
}

type Author {
  path: String
  form: Author_Form
  data: Author_Data
  initialValues: Author_InitialValues
}

union DocumentUnion = Post | Author
