type Query {
  document(path: String): DocumentUnion
}

union DocumentUnion = Post | Author

type Post {
  path: String
  form: Post_Form
  data: Post_Data
  initialValues: Post_InitialValues
}

type Post_Form {
  label: String
  name: String
  fields: [Post_FormFields]
}

union Post_FormFields = TextareaField | SelectField | Post_Sections_BlocksField

type TextareaField {
  name: String
  label: String
  component: String
  description: String
}

type SelectField {
  name: String
  label: String
  component: String
  options: [String]
}

type Post_Sections_BlocksField {
  name: String
  label: String
  component: String
  templates: post_sections_BlocksFieldTemplates
}

type post_sections_BlocksFieldTemplates {
  section: Section_Form
}

type Section_Form {
  label: String
  name: String
  fields: [Section_FormFields]
}

union Section_FormFields = TextareaField | section_cta_GroupField | ListField

type section_cta_GroupField {
  name: String
  label: String
  component: String
  fields: [Section_Cta_FormFields]
}

union Section_Cta_FormFields = TextareaField

type ListField {
  name: String
  label: String
  component: String
  defaultItem: String
  field: ListFormFieldItemField
}

union ListFormFieldItemField = SelectField | TextField

type TextField {
  component: String
}

type Post_Data {
  title: String
  author: author_Document
  sections: [sectionDataUnion]
}

type author_Document {
  document: authorsDocumentUnion
}

union authorsDocumentUnion = Author

type Author {
  path: String
  form: Author_Form
  data: Author_Data
  initialValues: Author_InitialValues
}

type Author_Form {
  label: String
  name: String
  fields: [Author_FormFields]
}

union Author_FormFields = TextareaField | SelectField | ListField | author_accolades_GroupListField

type author_accolades_GroupListField {
  name: String
  label: String
  component: String
  fields: [Author_Accolades_FormFields]
}

union Author_Accolades_FormFields = TextareaField

type Author_Data {
  name: String
  role: String
  anecdotes: [String]
  accolades: [Author_Accolades_Data]
}

type Author_Accolades_Data {
  figure: String
  description: String
}

type Author_InitialValues {
  name: String
  role: String
  anecdotes: [String]
  accolades: [Author_Accolades_Data]
}

union sectionDataUnion = Section_Data

type Section_Data {
  description: String
  cta: Section_Cta_Data
  authors: authors_Documents
  template: String
}

type Section_Cta_Data {
  header: String
}

type authors_Documents {
  documents: [authorsDocumentUnion]
}

type Post_InitialValues {
  title: String
  author: String
  sections: [Section_InitialValuesUnion]
}

union Section_InitialValuesUnion = Section_InitialValues

type Section_InitialValues {
  description: String
  authors: [String]
  cta: Section_Cta_InitialValues
  _template: String
}

type Section_Cta_InitialValues {
  header: String
}

type Mutation {
  updateDocument(path: String!, params: DocumentInput): DocumentUnion
}

input DocumentInput {
  Post_Input: Post_Input
  Author_Input: Author_Input
}

input Post_Input {
  content: String
  data: Post_InputData
}

input Post_InputData {
  title: String
  author: String
  sections: [Post_Sections_BlocksInput]
}

input Post_Sections_BlocksInput {
  Section_InputData: Section_InputData
}

input Section_InputData {
  description: String
  authors: [String]
  cta: Section_Cta_InputData!
  template: String
}

input Section_Cta_InputData {
  header: String
}

input Author_Input {
  content: String
  data: Author_InputData
}

input Author_InputData {
  name: String
  role: String
  anecdotes: [String]
  accolades: [Author_Accolades_InputData]
}

input Author_Accolades_InputData {
  figure: String
  description: String
}
