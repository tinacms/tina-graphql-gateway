type Query {
  document(path: String): DocumentUnion
}

union DocumentUnion = post | author

type post {
  path: String
  form: postForm
  data: postData
  initialValues: postInitialValues
}

type postForm {
  label: String
  name: String
  fields: [postFormFields]
}

union postFormFields = TextareaField | SelectField | post_sections_BlocksField

type TextareaField {
  name: String
  label: String
  component: String
  description: String
}

type SelectField {
  name: String
  label: String
  component: String
  options: [String]
}

type post_sections_BlocksField {
  name: String
  label: String
  component: String
  templates: post_sections_BlocksFieldTemplates
}

type post_sections_BlocksFieldTemplates {
  section: sectionForm
}

type sectionForm {
  label: String
  name: String
  fields: [sectionFormFields]
}

union sectionFormFields = TextareaField | section_cta_GroupField | ListField

type section_cta_GroupField {
  name: String
  label: String
  component: String
  fields: [sectionctaFormFields]
}

union sectionctaFormFields = TextareaField

type ListField {
  name: String
  label: String
  component: String
  defaultItem: String
  field: ListFormFieldItemField
}

union ListFormFieldItemField = SelectField | TextField

type TextField {
  component: String
}

type postData {
  title: String
  author: author_Document
  sections: [sectionDataUnion]
}

type author_Document {
  document: authorsDocumentUnion
}

union authorsDocumentUnion = author

type author {
  path: String
  form: authorForm
  data: authorData
  initialValues: authorInitialValues
}

type authorForm {
  label: String
  name: String
  fields: [authorFormFields]
}

union authorFormFields = TextareaField | SelectField | ListField | author_accolades_GroupListField

type author_accolades_GroupListField {
  name: String
  label: String
  component: String
  fields: [authoraccoladesFormFields]
}

union authoraccoladesFormFields = TextareaField

type authorData {
  name: String
  role: String
  anecdotes: [String]
  accolades: [accoladesData]
}

type accoladesData {
  figure: String
  description: String
}

type authorInitialValues {
  name: String
  role: String
  anecdotes: [String]
  accolades: [accoladesData]
}

union sectionDataUnion = sectionData

type sectionData {
  description: String
  cta: ctaData
  authors: authors_Documents
  template: String
}

type ctaData {
  header: String
}

type authors_Documents {
  documents: [authorsDocumentUnion]
}

type postInitialValues {
  title: String
  author: String
  sections: [sectionInitialValuesUnion]
}

union sectionInitialValuesUnion = sectionInitialValues

type sectionInitialValues {
  description: String
  authors: [String]
  cta: ctaInitialValues
  _template: String
}

type ctaInitialValues {
  header: String
}

type Mutation {
  updateDocument(path: String!, params: DocumentInput): DocumentUnion
}

input DocumentInput {
  postInput: postInput
  authorInput: authorInput
}

input postInput {
  content: String
  data: postInputData
}

input postInputData {
  title: String
  author: String
  sections: [post_sections_BlocksInput]
}

input post_sections_BlocksInput {
  sectionInputData: sectionInputData
}

input sectionInputData {
  description: String
  authors: [String]
  cta: ctaInputData!
  template: String
}

input ctaInputData {
  header: String
}

input authorInput {
  content: String
  data: authorInputData
}

input authorInputData {
  name: String
  role: String
  anecdotes: [String]
  accolades: [accoladesInputData]
}

input accoladesInputData {
  figure: String
  description: String
}
