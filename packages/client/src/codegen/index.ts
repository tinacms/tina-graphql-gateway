import {
  parse,
  printSchema,
  visit,
  GraphQLSchema,
  Visitor,
  ASTKindToNode,
  ASTNode,
} from "graphql";
import fs from "fs";
import { codegen } from "@graphql-codegen/core";
import {
  plugin as typescriptPlugin,
  TsVisitor,
} from "@graphql-codegen/typescript";
import { plugin as typescriptOperationsPlugin } from "@graphql-codegen/typescript-operations";
import { queryBuilder } from "./queryBuilder";

export const generateTypes = async ({
  schema,
  query,
}: {
  schema: GraphQLSchema;
  query: any;
}) => {
  try {
    const res = await codegen({
      filename:
        "/Users/jeffsee/code/scratch/graphql-demo/apps/demo/.forestry/autoschema.gql",
      schema: parse(printSchema(schema)),
      documents: [],
      config: {},
      plugins: [
        { forestryOperations: {} },
        { typescript: {} },
        { typescriptOperations: {} },
      ],
      pluginMap: {
        forestryOperations: {
          plugin: (schema, documents, config) => {
            documents.push({
              location: "operation.graphql",
              // @ts-ignore
              document: queryBuilder(schema),
            });

            return undefined;
          },
        },
        typescript: {
          plugin: typescriptPlugin,
        },
        typescriptOperations: {
          plugin: typescriptOperationsPlugin,
        },
      },
    });
    await fs.writeFileSync(
      "/Users/jeffsee/code/scratch/graphql-demo/apps/demo/.forestry/schemaAst.json",
      `${JSON.stringify(parse(printSchema(schema)), null, 2)}`
    );
    await fs.writeFileSync(
      "/Users/jeffsee/code/scratch/graphql-demo/apps/demo/.forestry/autotypes.ts",
      `// DO NOT MODIFY THIS FILE. This file is automatically generated by Forestry
${res}
        `
    );
    await fs.writeFileSync(
      "/Users/jeffsee/code/scratch/graphql-demo/apps/demo/.forestry/autoquery.ts",
      `// DO NOT MODIFY THIS FILE. This file is automatically generated by Forestry
export const documentQuery = \`${query}\`
        `
    );
  } catch (e) {
    console.error(e);
  }
};
